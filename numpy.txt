LinearRegressor using import numpy as np


(X:\Anaconda) C:\Users\The Stallion>activate tensorflow

(tensorflow) C:\Users\The Stallion>python
Python 3.5.2 (v3.5.2:4def2a2901a5, Jun 25 2016, 22:18:55) [MSC v.1900 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import tensorflow as tf
>>> import numpy as np
>>> features = [tf.contrib.layers.real_valued_column("x", dimension=1)]
>>> estimator = tf.contrib.learn.LinearRegressor(feature_columns=features)
WARNING:tensorflow:Using temporary folder as model directory: C:\Users\THESTA~1\AppData\Local\Temp\tmplrww_vfc
INFO:tensorflow:Using default config.
INFO:tensorflow:Using config: {'_environment': 'local', '_keep_checkpoint_every_n_hours': 10000, '_is_chief': True, '_tf_random_seed': None, '_save_checkpoints_steps': None, '_task_id': 0, '_tf_config': gpu_options {
  per_process_gpu_memory_fraction: 1
}
, '_evaluation_master': '', '_save_checkpoints_secs': 600, '_task_type': None, '_save_summary_steps': 100, '_num_ps_replicas': 0, '_keep_checkpoint_max': 5, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x000002A58CCF1EB8>, '_master': ''}
>>> x = np.array([1,2,3,4])
>>> y = np.array([0,-1,-2,-3])
>>> input_fn = tf.contrib.learn.io.numpy_input_fn({"x":x}, y, batch_size=4, num_epochs=1000)
>>> estimator.fit(input_fn=input_fn, steps=1000)
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "BestSplits" device_type: "CPU"') for unknown op: BestSplits
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "CountExtremelyRandomStats" device_type: "CPU"') for unknown op: CountExtremelyRandomStats
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "FinishedNodes" device_type: "CPU"') for unknown op: FinishedNodes
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "GrowTree" device_type: "CPU"') for unknown op: GrowTree
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "ReinterpretStringToFloat" device_type: "CPU"') for unknown op: ReinterpretStringToFloat
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "SampleInputs" device_type: "CPU"') for unknown op: SampleInputs
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "ScatterAddNdim" device_type: "CPU"') for unknown op: ScatterAddNdim
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "TopNInsert" device_type: "CPU"') for unknown op: TopNInsert
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "TopNRemove" device_type: "CPU"') for unknown op: TopNRemove
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "TreePredictions" device_type: "CPU"') for unknown op: TreePredictions
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "UpdateFertileSlots" device_type: "CPU"') for unknown op: UpdateFertileSlots
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:From C:\Users\The Stallion\AppData\Local\Programs\Python\Python35\lib\site-packages\tensorflow\contrib\learn\python\learn\estimators\head.py:1362: scalar_summary (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2016-11-30.
Instructions for updating:
Please switch to tf.summary.scalar. Note that tf.summary.scalar uses the node name instead of the tag. This means that TensorFlow will automatically de-duplicate summary names based on the scope they are created in. Also, passing a tensor or list of tags to a scalar summary op is no longer supported.
INFO:tensorflow:Create CheckpointSaverHook.
INFO:tensorflow:Saving checkpoints for 1 into C:\Users\THESTA~1\AppData\Local\Temp\tmplrww_vfc\model.ckpt.
INFO:tensorflow:step = 1, loss = 3.5
INFO:tensorflow:global_step/sec: 2426.66
INFO:tensorflow:step = 101, loss = 0.0480492
INFO:tensorflow:global_step/sec: 2270.46
INFO:tensorflow:step = 201, loss = 0.00679606
INFO:tensorflow:global_step/sec: 2401.14
INFO:tensorflow:step = 301, loss = 0.00634469
INFO:tensorflow:global_step/sec: 2561.66
INFO:tensorflow:step = 401, loss = 0.00077783
INFO:tensorflow:global_step/sec: 2554.47
INFO:tensorflow:step = 501, loss = 6.74129e-05
INFO:tensorflow:global_step/sec: 2561.67
INFO:tensorflow:step = 601, loss = 1.26923e-05
INFO:tensorflow:global_step/sec: 2561.55
INFO:tensorflow:step = 701, loss = 3.13284e-06
INFO:tensorflow:global_step/sec: 2845.54
INFO:tensorflow:step = 801, loss = 6.42065e-07
INFO:tensorflow:global_step/sec: 3330.19
INFO:tensorflow:step = 901, loss = 2.38294e-07
INFO:tensorflow:Saving checkpoints for 1000 into C:\Users\THESTA~1\AppData\Local\Temp\tmplrww_vfc\model.ckpt.
INFO:tensorflow:Loss for final step: 7.41592e-08.
LinearRegressor(params={'optimizer': None, 'joint_weights': False, 'gradient_clip_norm': None, 'feature_columns': [_RealValuedColumn(column_name='x', dimension=1, default_value=None, dtype=tf.float32, normalizer=None)], 'head': <tensorflow.contrib.learn.python.learn.estimators.head._RegressionHead object at 0x000002A5878B5198>})
>>> estimator.evaluate(input_fn=input_fn)
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:From C:\Users\The Stallion\AppData\Local\Programs\Python\Python35\lib\site-packages\tensorflow\contrib\learn\python\learn\estimators\head.py:1362: scalar_summary (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2016-11-30.
Instructions for updating:
Please switch to tf.summary.scalar. Note that tf.summary.scalar uses the node name instead of the tag. This means that TensorFlow will automatically de-duplicate summary names based on the scope they are created in. Also, passing a tensor or list of tags to a scalar summary op is no longer supported.
INFO:tensorflow:Starting evaluation at 2017-04-21-19:05:51
INFO:tensorflow:Finished evaluation at 2017-04-21-19:05:51
INFO:tensorflow:Saving dict for global step 1000: global_step = 1000, loss = 5.22944e-08
WARNING:tensorflow:Skipping summary for global_step, must be a float or np.float32.
{'global_step': 1000, 'loss': 5.2294361e-08}
>>>